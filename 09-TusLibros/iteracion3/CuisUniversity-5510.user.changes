

----QUIT----(26 October 2022 08:07:27) CuisUniversity-5510.image priorSource: 2900072!

----STARTUP---- (26 October 2022 08:07:28) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5510.image!


----QUIT----(26 October 2022 08:07:28) CuisUniversity-5510.image priorSource: 7154921!

----STARTUP---- (3 November 2022 19:24:09) as /home/clinux01/Descargas/is1/linux64.tar-1/linux64/CuisUniversity-5510.image!


----End fileIn of /home/clinux01/Descargas/is1/linux64.tar-1/linux64/TusLibros-33.st----!

TestCase subclass: #RestInterfaceFacadeTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceFacadeTest category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 19:32:15'!
TestCase subclass: #RestInterfaceFacadeTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #UserAuthenticatorSimulator category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 19:56:55'!
Object subclass: #UserAuthenticatorSimulator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceFacade category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 19:57:01'!
Object subclass: #RestInterfaceFacade
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceFacadeTest methodsFor: 'no messages' stamp: 'TC&OLT 11/3/2022 19:56:47'!
test01
	
	"test01CartCantBeCreatedForAnInvalidUser"
	
	"no se puede crear carrito cuando no se puede autenticar al usuario. No es responsabilidad nuestra autenticar, lo hace un sistma externo (lo simulás)."
	
	| authenticator facade |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	facade := RestInterfaceFacade with: authenticator.
	
	self should: [ facade createCartForUser: 'bingus' withPassword: 'bababooey'. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidUserErrorMessage.
	].! !

!testRun: #RestInterfaceFacadeTest #test01 stamp: 'TC&OLT 11/3/2022 19:59:37'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test01 stamp: 'TC&OLT 11/3/2022 19:59:37'!
ERROR!
!UserAuthenticatorSimulator class methodsFor: 'no messages' stamp: 'TC&OLT 11/3/2022 20:01:49'!
with: aDictionaryWithUsernamesAndPasswords
	
	^self new initializeWith: aDictionaryWithUsernamesAndPasswords.! !
!UserAuthenticatorSimulator methodsFor: 'no messages' stamp: 'TC&OLT 11/3/2022 20:02:17'!
initializeWith: aDictionaryWithUsernamesAndPasswords
	
	! !

Object subclass: #UserAuthenticatorSimulator
	instanceVariableNames: 'authenticationDictionary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #UserAuthenticatorSimulator category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 20:02:52'!
Object subclass: #UserAuthenticatorSimulator
	instanceVariableNames: 'authenticationDictionary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!UserAuthenticatorSimulator methodsFor: 'initialization' stamp: 'TC&OLT 11/3/2022 20:03:01' prior: 50555877!
initializeWith: aDictionaryWithUsernamesAndPasswords
	
	authenticationDictionary := aDictionaryWithUsernamesAndPasswords.! !
!RestInterfaceFacade class methodsFor: 'no messages' stamp: 'TC&OLT 11/3/2022 20:03:48'!
with: anAuthenticator
	
	^self new initializeWith: anAuthenticator.! !
!RestInterfaceFacade methodsFor: 'no messages' stamp: 'TC&OLT 11/3/2022 20:04:09'!
initializeWith: anAuthenticator
	
	! !

Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceFacade category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 20:04:20'!
Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/3/2022 20:04:27' prior: 50555908!
initializeWith: anAuthenticator
	
	authenticator := anAuthenticator.! !
!RestInterfaceFacade methodsFor: 'nil' stamp: 'TC&OLT 11/3/2022 20:05:19'!
createCartForUser: aUsername withPassword: aPassword
	
	authenticator authentcateUsername: aUsername withPassword: aPassword.
	
	! !
!RestInterfaceFacade methodsFor: 'as yet unclassified' stamp: 'TC&OLT 11/3/2022 20:07:23' prior: 50555930!
createCartForUser: aUsername withPassword: aPassword
	
	^self error: self class invalidUserErrorMessage.! !
!RestInterfaceFacade class methodsFor: 'nil' stamp: 'TC&OLT 11/3/2022 20:08:23'!
invalidUserErrorMessage
	
	^'Invalid user.'.! !

!testRun: #RestInterfaceFacadeTest #test01 stamp: 'TC&OLT 11/3/2022 20:09:47'!
PASSED!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/3/2022 20:16:45'!
test02
	
	"test02CartIsCreatedForAValidUser"
	
	| authenticator facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	facade := RestInterfaceFacade with: authenticator.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	self assert: (facade listCart: newCartID) isEmpty.! !

!testRun: #RestInterfaceFacadeTest #test02 stamp: 'TC&OLT 11/3/2022 20:41:35'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test02 stamp: 'TC&OLT 11/3/2022 20:41:47'!
ERROR!

!classDefinition: #RestInterfaceFacade category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 20:48:35'!
Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idGenerator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/3/2022 20:48:31' prior: 50555938!
createCartForUser: aUsername withPassword: aPassword
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
			^idGenerator generateNewID.
	].
	
	^self error: self class invalidUserErrorMessage.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/3/2022 20:49:03' prior: 50555980!
createCartForUser: aUsername withPassword: aPassword
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		^idGenerator generateNewID.
	].
	
	^self error: self class invalidUserErrorMessage.! !

!classDefinition: #UserAuthenticatorSimulator category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 20:50:48'!
Object subclass: #UserAuthenticatorSimulator
	instanceVariableNames: 'authenticationDictionary authenticationResult'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!UserAuthenticatorSimulator methodsFor: 'nil' stamp: 'TC&OLT 11/3/2022 20:50:47'!
authenticateUsername: aUsername withPassword: aPassword

	^authenticationResult.! !

Object subclass: #UserAuthenticatorSimulator
	instanceVariableNames: ' authenticationResult'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #UserAuthenticatorSimulator category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 20:51:29'!
Object subclass: #UserAuthenticatorSimulator
	instanceVariableNames: 'authenticationResult'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!UserAuthenticatorSimulator methodsFor: 'initialization' stamp: 'TC&OLT 11/3/2022 20:54:24' prior: 50555896!
initializeWith: aBooleanToReturnForAuthentification
	
	authenticationResult := aBooleanToReturnForAuthentification.! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/3/2022 20:57:51' prior: 50555951!
test02
	
	"test02CartIsCreatedForAValidUser"
	
	| authenticator facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (true).
	
	facade := RestInterfaceFacade with: authenticator.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	self assert: (facade listCart: newCartID) isEmpty.! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/3/2022 20:57:59' prior: 50555842!
test01
	
	"test01CartCantBeCreatedForAnInvalidUser"
	
	"no se puede crear carrito cuando no se puede autenticar al usuario. No es responsabilidad nuestra autenticar, lo hace un sistma externo (lo simulás)."
	
	| authenticator facade |
	
	authenticator := UserAuthenticatorSimulator with: false.
	
	facade := RestInterfaceFacade with: authenticator.
	
	self should: [ facade createCartForUser: 'bingus' withPassword: 'bababooey'. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidUserErrorMessage.
	].! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/3/2022 20:58:08' prior: 50556037!
test02
	
	"test02CartIsCreatedForAValidUser"
	
	| authenticator facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: true.
	
	facade := RestInterfaceFacade with: authenticator.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	self assert: (facade listCart: newCartID) isEmpty.! !

!testRun: #RestInterfaceFacadeTest #test02 stamp: 'TC&OLT 11/3/2022 20:58:18'!
ERROR!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/3/2022 20:59:35' prior: 50555991!
createCartForUser: aUsername withPassword: aPassword
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		^idGenerator generateNewID.
		"acordemonos de crear el carrito y asociarlo a la ID"
	].
	
	^self error: self class invalidUserErrorMessage.! !
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/3/2022 21:02:22'!
initializeAuthenticatingWith: anAuthenticator generatingIDsWith: anIDGenerator
	
	authenticator := anAuthenticator.
	idGenerator := anIDGenerator.! !

Object subclass: #IDGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #IDGenerator category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 21:02:42'!
Object subclass: #IDGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #IDGenerator category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 21:05:42'!
Object subclass: #IDGenerator
	instanceVariableNames: 'newID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!IDGenerator methodsFor: 'nil' stamp: 'TC&OLT 11/3/2022 21:05:41'!
generateNewID

	newID:= newID+1.
	
	^ newID.! !
!IDGenerator methodsFor: 'nil' stamp: 'TC&OLT 11/3/2022 21:06:24' overrides: 16920235!
initialize

	newID := 0.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/3/2022 21:11:00' prior: 50556090!
createCartForUser: aUsername withPassword: aPassword
		
	| newCart |	
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		newCart:= Cart acceptingItemsOf: OrderedCollection new.
		^idGenerator generateNewID.
		"acordemonos de crear el carrito y asociarlo a la ID"
	].
	
	^self error: self class invalidUserErrorMessage.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/3/2022 21:11:34' prior: 50556137!
createCartForUser: aUsername withPassword: aPassword
		
	| newCart |	
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		newCart:= Cart acceptingItemsOf: Dictionary new.
		^idGenerator generateNewID.
		"acordemonos de crear el carrito y asociarlo a la ID"
	].
	
	^self error: self class invalidUserErrorMessage.! !

Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idGenerator idToCartMap'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceFacade category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 21:14:19'!
Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idGenerator idToCartMap'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idGenerator idToCartMapping'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceFacade category: 'TusLibros' stamp: 'TC&OLT 11/3/2022 21:15:41'!
Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idGenerator idToCartMapping'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!methodRemoval: RestInterfaceFacade #initializeWith: stamp: 'TC&OLT 11/3/2022 21:16:58'!
initializeWith: anAuthenticator
	
	authenticator := anAuthenticator.!
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/3/2022 21:18:04'!
initializeAuthenticatingWith: anAuthenticator generatingIDsWith: anIDGenerator mappingWith: anIDToCartMapping
	
	authenticator := anAuthenticator.
	idGenerator := anIDGenerator.
	idToCartMapping := anIDToCartMapping.! !

----SNAPSHOT----(3 November 2022 21:18:16) CuisUniversity-5510.image priorSource: 7155150!

----STARTUP---- (7 November 2022 08:51:34) as /home/kaneda/Downloads/linux64-tusLibros-iteracion3/CuisUniversity-5510.image!


Object subclass: #UserAuthenticatorSimulator
	instanceVariableNames: 'usersWithPasswords'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #UserAuthenticatorSimulator category: 'TusLibros' stamp: 'TC&OLT 11/7/2022 09:06:24'!
Object subclass: #UserAuthenticatorSimulator
	instanceVariableNames: 'usersWithPasswords'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #UserAuthenticatorSimulator
	instanceVariableNames: 'usersAndPasswords'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #UserAuthenticatorSimulator category: 'TusLibros' stamp: 'TC&OLT 11/7/2022 09:06:29'!
Object subclass: #UserAuthenticatorSimulator
	instanceVariableNames: 'usersAndPasswords'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!UserAuthenticatorSimulator methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 09:07:10' prior: 50556030!
initializeWith: aDictionaryWithUsersAndPasswords
	
	usersAndPasswords := aDictionaryWithUsersAndPasswords.! !
!UserAuthenticatorSimulator methodsFor: 'authentication' stamp: 'TC&OLT 11/7/2022 09:08:46' prior: 50556010!
authenticateUsername: aUsername withPassword: aPassword

	^(usersAndPasswords at: aUsername ifAbsent: [ ^false. ]) = aPassword.! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 09:09:20' prior: 50556051!
test01
	
	"test01CartCantBeCreatedForAnInvalidUser"
	
	"no se puede crear carrito cuando no se puede autenticar al usuario. No es responsabilidad nuestra autenticar, lo hace un sistma externo (lo simulás)."
	
	| authenticator facade |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary new).
	
	facade := RestInterfaceFacade with: authenticator.
	
	self should: [ facade createCartForUser: 'bingus' withPassword: 'bababooey'. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidUserErrorMessage.
	].! !

!testRun: #RestInterfaceFacadeTest #test01 stamp: 'TC&OLT 11/7/2022 09:09:23'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test01 stamp: 'TC&OLT 11/7/2022 09:09:23'!
ERROR!
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 09:11:38'!
initializeWith: anAuthenticator
	
	authenticator := anAuthenticator.! !

!testRun: #RestInterfaceFacadeTest #test01 stamp: 'TC&OLT 11/7/2022 09:11:43'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02 stamp: 'TC&OLT 11/7/2022 09:11:43'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test02 stamp: 'TC&OLT 11/7/2022 09:11:43'!
ERROR!
!Behavior method!
with: aDictionaryWithUsernamesAndPasswords
	#_coverageTracker1213326_ markAsExecuted.
	^ #_coverageTracker1213326_
		coverAll:
			{57 to: 71}
		evaluating: [
			(#_coverageTracker1213326_
				coverAll:
					{53 to: 55}
				evaluating: [
					(#_coverageTracker1213326_
						coverAll:
							{48 to: 51}
						byLiteralOrPseudoVariable: self) new ]) initializeWith:
				(#_coverageTracker1213326_
					cover: (73 to: 108)
					declaredAt: (7 to: 42)
					by: aDictionaryWithUsernamesAndPasswords) ].! !
!Behavior method!
initializeWith: aDictionaryWithUsersAndPasswords
	#_coverageTracker1214753_ markAsExecuted.
	#_coverageTracker1214753_
		cover: (53 to: 69)
		declaredAt: (53 to: 69)
		by:
			(usersAndPasswords _ #_coverageTracker1214753_
				cover: (74 to: 105)
				declaredAt: (17 to: 48)
				by: aDictionaryWithUsersAndPasswords).! !
!Behavior method!
with: anAuthenticator
	#_coverageTracker1213936_ markAsExecuted.
	^ #_coverageTracker1213936_
		coverAll:
			{36 to: 50}
		evaluating: [
			(#_coverageTracker1213936_
				coverAll:
					{32 to: 34}
				evaluating: [
					(#_coverageTracker1213936_
						coverAll:
							{27 to: 30}
						byLiteralOrPseudoVariable: self) new ]) initializeWith:
				(#_coverageTracker1213936_
					cover: (52 to: 66)
					declaredAt: (7 to: 21)
					by: anAuthenticator) ].! !
!Behavior method!
initializeWith: anAuthenticator
	#_coverageTracker1214747_ markAsExecuted.
	#_coverageTracker1214747_
		cover: (36 to: 48)
		declaredAt: (36 to: 48)
		by:
			(authenticator _ #_coverageTracker1214747_
				cover: (53 to: 67)
				declaredAt: (17 to: 31)
				by: anAuthenticator).! !
!Behavior method!
createCartForUser: aUsername withPassword: aPassword
	| newCart |
	#_coverageTracker1213693_ markAsExecuted.
	#_coverageTracker1213693_
		coverAll:
			{147 to: 153}
		evaluating: [
			(#_coverageTracker1213693_
				coverAll:
					{90 to: 110. 122 to: 134}
				evaluating: [
					(#_coverageTracker1213693_
						cover: (76 to: 88)
						declaredAt: (76 to: 88)
						by: authenticator)
						authenticateUsername:
							(#_coverageTracker1213693_
								cover: (112 to: 120)
								declaredAt: (20 to: 28)
								by: aUsername)
						withPassword:
							(#_coverageTracker1213693_
								cover: (136 to: 144)
								declaredAt: (44 to: 52)
								by: aPassword) ]) ifTrue: [
				#_coverageTracker1213693_
					cover: (159 to: 165)
					declaredAt: (60 to: 66)
					by:
						(newCart _ #_coverageTracker1213693_
							coverAll:
								{174 to: 190}
							evaluating: [
								(#_coverageTracker1213693_
									coverAll:
										{169 to: 172}
									by: Cart) acceptingItemsOf:
									(#_coverageTracker1213693_
										coverAll:
											{203 to: 205}
										evaluating: [
											(#_coverageTracker1213693_
												coverAll:
													{192 to: 201}
												by: Dictionary) new ]) ]).
				^ #_coverageTracker1213693_
					coverAll:
						{223 to: 235}
					evaluating: [
						(#_coverageTracker1213693_
							cover: (211 to: 221)
							declaredAt: (211 to: 221)
							by: idGenerator) generateNewID
						"acordemonos de crear el carrito y asociarlo a la ID" ]]].
	^ #_coverageTracker1213693_
		coverAll:
			{307 to: 312}
		evaluating: [
			(#_coverageTracker1213693_
				coverAll:
					{302 to: 305}
				byLiteralOrPseudoVariable: self) error:
				(#_coverageTracker1213693_
					coverAll:
						{325 to: 347}
					evaluating: [
						(#_coverageTracker1213693_
							coverAll:
								{319 to: 323}
							evaluating: [
								(#_coverageTracker1213693_
									coverAll:
										{314 to: 317}
									byLiteralOrPseudoVariable: self) class ]) invalidUserErrorMessage ]) ].! !
!Behavior method!
authenticateUsername: aUsername withPassword: aPassword
	#_coverageTracker1213513_ markAsExecuted.
	^ #_coverageTracker1213513_
		coverAll:
			{116 to: 116}
		evaluating: [
			(#_coverageTracker1213513_
				coverAll:
					{79 to: 81. 93 to: 101}
				evaluating: [
					(#_coverageTracker1213513_
						cover: (61 to: 77)
						declaredAt: (61 to: 77)
						by: usersAndPasswords)
						at:
							(#_coverageTracker1213513_
								cover: (83 to: 91)
								declaredAt: (23 to: 31)
								by: aUsername)
						ifAbsent: [ ^ #_coverageTracker1213513_
								coverAll:
									{106 to: 110}
								byLiteralOrPseudoVariable: false ]]) =
				(#_coverageTracker1213513_
					cover: (118 to: 126)
					declaredAt: (47 to: 55)
					by: aPassword) ].! !
!Behavior method!
invalidUserErrorMessage
	#_coverageTracker1213509_ markAsExecuted.
	^ #_coverageTracker1213509_
		coverAll:
			{29 to: 43}
		byLiteralOrPseudoVariable: 'Invalid user.'.! !

!testRun: #RestInterfaceFacadeTest #test01 stamp: 'TC&OLT 11/7/2022 09:11:49'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test01 stamp: 'TC&OLT 11/7/2022 09:11:52'!
PASSED!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 09:12:12' prior: 50556073!
test02
	
	"test02CartIsCreatedForAValidUser"
	
	| authenticator facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	facade := RestInterfaceFacade with: authenticator.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	self assert: (facade listCart: newCartID) isEmpty.! !

!testRun: #RestInterfaceFacadeTest #test02 stamp: 'TC&OLT 11/7/2022 09:12:18'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test02 stamp: 'TC&OLT 11/7/2022 09:12:18'!
ERROR!
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 09:15:54'!
initializeAuthenticatingWith: anAuthenticator
	
	authenticator := anAuthenticator.! !

Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMapping'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceFacade category: 'TusLibros' stamp: 'TC&OLT 11/7/2022 09:16:01'!
Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMapping'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 09:16:16' prior: 50556152!
createCartForUser: aUsername withPassword: aPassword
		
	| newCart |	
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		newCart:= Cart acceptingItemsOf: Dictionary new.
		^self generateNewID.
		"acordemonos de crear el carrito y asociarlo a la ID"
	].
	
	^self error: self class invalidUserErrorMessage.! !

!methodRemoval: RestInterfaceFacade #initializeAuthenticatingWith:generatingIDsWith:mappingWith: stamp: 'TC&OLT 11/7/2022 09:16:30'!
initializeAuthenticatingWith: anAuthenticator generatingIDsWith: anIDGenerator mappingWith: anIDToCartMapping
	
	authenticator := anAuthenticator.
	idGenerator := anIDGenerator.
	idToCartMapping := anIDToCartMapping.!

!methodRemoval: RestInterfaceFacade #initializeAuthenticatingWith:generatingIDsWith: stamp: 'TC&OLT 11/7/2022 09:16:34'!
initializeAuthenticatingWith: anAuthenticator generatingIDsWith: anIDGenerator
	
	authenticator := anAuthenticator.
	idGenerator := anIDGenerator.!

!methodRemoval: RestInterfaceFacade #initializeAuthenticatingWith: stamp: 'TC&OLT 11/7/2022 09:16:59'!
initializeAuthenticatingWith: anAuthenticator
	
	authenticator := anAuthenticator.!

!testRun: #RestInterfaceFacadeTest #test01 stamp: 'TC&OLT 11/7/2022 09:17:04'!
PASSED!

Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMapping lastID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceFacade category: 'TusLibros' stamp: 'TC&OLT 11/7/2022 09:17:25'!
Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMapping lastID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 09:17:34' prior: 50556285!
initializeWith: anAuthenticator
	
	authenticator := anAuthenticator.
	lastID := 0.! !
!RestInterfaceFacade methodsFor: 'nil' stamp: 'TC&OLT 11/7/2022 09:18:56'!
generateNewID
	
	| newID |
	
	newID := lastID.
	
	lastID := lastID + 1.
	
	^newID.! !

!classRemoval: #IDGenerator stamp: 'TC&OLT 11/7/2022 09:19:51'!
Object subclass: #IDGenerator
	instanceVariableNames: 'newID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 09:22:02' prior: 50556492!
createCartForUser: aUsername withPassword: aPassword
		
	| newCart |	
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		| newID |
		newCart:= Cart acceptingItemsOf: Dictionary new.
		newID := self generateNewID.
		"acordemonos de crear el carrito y asociarlo a la ID"
	].
	
	^self error: self class invalidUserErrorMessage.! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 09:29:09'!
test01CartCantBeCreatedForAnInvalidUser
	
	"test01CartCantBeCreatedForAnInvalidUser"
	
	"no se puede crear carrito cuando no se puede autenticar al usuario. No es responsabilidad nuestra autenticar, lo hace un sistma externo (lo simulás)."
	
	| authenticator facade |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary new).
	
	facade := RestInterfaceFacade with: authenticator.
	
	self should: [ facade createCartForUser: 'bingus' withPassword: 'bababooey'. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidUserErrorMessage.
	].! !

!methodRemoval: RestInterfaceFacadeTest #test01 stamp: 'TC&OLT 11/7/2022 09:29:09'!
test01
	
	"test01CartCantBeCreatedForAnInvalidUser"
	
	"no se puede crear carrito cuando no se puede autenticar al usuario. No es responsabilidad nuestra autenticar, lo hace un sistma externo (lo simulás)."
	
	| authenticator facade |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary new).
	
	facade := RestInterfaceFacade with: authenticator.
	
	self should: [ facade createCartForUser: 'bingus' withPassword: 'bababooey'. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidUserErrorMessage.
	].!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 09:29:21'!
test02CartIsCreatedForAValidUser
	
	"test02CartIsCreatedForAValidUser"
	
	| authenticator facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	facade := RestInterfaceFacade with: authenticator.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	self assert: (facade listCart: newCartID) isEmpty.! !

!methodRemoval: RestInterfaceFacadeTest #test02 stamp: 'TC&OLT 11/7/2022 09:29:21'!
test02
	
	"test02CartIsCreatedForAValidUser"
	
	| authenticator facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	facade := RestInterfaceFacade with: authenticator.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	self assert: (facade listCart: newCartID) isEmpty.!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 09:29:26' prior: 50556625!
test02CartIsCreatedForAValidUser
	
	| authenticator facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	facade := RestInterfaceFacade with: authenticator.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	self assert: (facade listCart: newCartID) isEmpty.! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 09:29:29' prior: 50556581!
test01CartCantBeCreatedForAnInvalidUser
	
	"no se puede crear carrito cuando no se puede autenticar al usuario. No es responsabilidad nuestra autenticar, lo hace un sistma externo (lo simulás)."
	
	| authenticator facade |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary new).
	
	facade := RestInterfaceFacade with: authenticator.
	
	self should: [ facade createCartForUser: 'bingus' withPassword: 'bababooey'. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidUserErrorMessage.
	].! !

Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMappings lastID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceFacade category: 'TusLibros' stamp: 'TC&OLT 11/7/2022 09:31:26'!
Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMappings lastID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 09:31:42' prior: 50556548!
initializeWith: anAuthenticator
	
	authenticator := anAuthenticator.
	idToCartMappings := Dictionary new.
	lastID := 0.! !

----End fileIn of /home/kaneda/Downloads/linux64-tusLibros-iteracion3/Packages/TerseGuide.pck.st----!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 09:34:00' prior: 50556567!
createCartForUser: aUsername withPassword: aPassword
		
	| newCart |	
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		| newID |
		newCart:= Cart acceptingItemsOf: Dictionary new.
		newID := self generateNewID.
		idToCartMappings add: (newID->Cart acceptingItemsOf: Dictionary new).
		"acordemonos de crear el carrito y asociarlo a la ID"
	].
	
	^self error: self class invalidUserErrorMessage.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 09:34:22' prior: 50559633!
createCartForUser: aUsername withPassword: aPassword
		
	| newCart |	
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		| newID |
		newCart:= Cart acceptingItemsOf: Dictionary new.
		newID := self generateNewID.
		idToCartMappings add: (newID->newCart).
		"acordemonos de crear el carrito y asociarlo a la ID"
	].
	
	^self error: self class invalidUserErrorMessage.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 09:34:39' prior: 50559650!
createCartForUser: aUsername withPassword: aPassword
		
	| newCart |	
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		| newID |
		newCart:= Cart acceptingItemsOf: Dictionary new.
		newID := self generateNewID.
		idToCartMappings add: (newID->newCart).
	].
	
	^self error: self class invalidUserErrorMessage.! !
!Cart methodsFor: 'queries' stamp: 'TC&OLT 11/7/2022 09:46:57'!
items
	
	^items copy.! !
!RestInterfaceFacade methodsFor: 'nil' stamp: 'TC&OLT 11/7/2022 09:47:43'!
listCart: aCartID
	
	^idToCartMappings at: aCartID.! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 09:47:55'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 09:47:55'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 09:47:55'!
ERROR!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 09:48:23' prior: 50556670!
test01CartCantBeCreatedForAnInvalidUser
	
	"no se puede crear carrito cuando no se puede autenticar al usuario. No es responsabilidad nuestra autenticar, lo hace un sistma externo (lo simulás)."
	
	| authenticator facade |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary new).
	
	facade := RestInterfaceFacade with: authenticator.
	
	self should: [ facade createCartForUser: 'user' withPassword: 'password'. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidUserErrorMessage.
	].! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 09:48:27'!
PASSED!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 09:49:39' prior: 50559683!
listCart: aCartID
	
	^(idToCartMappings at: aCartID) items.! !

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 09:49:55'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 09:49:55'!
ERROR!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 09:52:11' prior: 50559666!
createCartForUser: aUsername withPassword: aPassword
		
	| newCart |	
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		| newID |
		newCart:= Cart acceptingItemsOf: Dictionary new.
		newID := self generateNewID.
		idToCartMappings add: (newID->newCart).
		^newID.
	].
	
	^self error: self class invalidUserErrorMessage.! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 09:52:15'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 09:52:15'!
PASSED!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:02:37'!
test03AddingToCartWithValidIDResultsInAddingToCartItems
	
	| authenticator facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	facade := RestInterfaceFacade with: authenticator.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	"Acá agregamos el catalog a la facade"
	
	self assert: (facade listCart: newCartID) isEmpty.! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:03:58' prior: 50559760!
test03AddingToCartWithValidIDResultsInAddingToCartItems
	
	| authenticator facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	facade := RestInterfaceFacade with: authenticator.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	"Acá agregamos el catalog a la facade"
	
	self assert: (OrderedCollection with: 'valid book') equals: (facade listCart: newCartID).! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:07:04' prior: 50559779!
test03AddingToCartWithValidIDResultsInAddingToCartItems
	
	| authenticator catalog facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	catalog := Dictionary with: 'valid book'->10*euro.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	"Acá agregamos el catalog a la facade"
	
	self assert: (OrderedCollection with: 'valid book') equals: (facade listCart: newCartID).! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:08:19'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:08:19'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:08:19'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test03AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:08:19'!
ERROR!
!RestInterfaceFacade class methodsFor: 'instance creation' stamp: 'TC&OLT 11/7/2022 10:09:50'!
authenticatingWith: anAuthenticator admitingItemsOn: aCatalog
	
	^self new initializeAuthenticatingWith: anAuthenticator admitingItemsOn: aCatalog.! !
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 10:10:17'!
initializeAuthenticatingWith: anAuthenticator admitingItemsOn: aCatalog
	
	authenticator := anAuthenticator.
	idToCartMappings := Dictionary new.
	lastID := 0.! !

Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMappings lastID catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceFacade category: 'TusLibros' stamp: 'TC&OLT 11/7/2022 10:10:26'!
Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMappings lastID catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 10:10:39' prior: 50559846!
initializeAuthenticatingWith: anAuthenticator admitingItemsOn: aCatalog
	
	authenticator := anAuthenticator.
	idToCartMappings := Dictionary new.
	lastID := 0.
	catalog := aCatalog.! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:13:43' prior: 50559799!
test03AddingToCartWithValidIDResultsInAddingToCartItems
	
	| authenticator catalog facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	catalog := Dictionary with: 'valid book'->10*euro.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	self assert: (OrderedCollection with: 'valid book') equals: (facade listCart: newCartID).! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:14:47'!
test04AddingToCartWithValidIDResultsInAddingToCartItems
	
	| authenticator catalog facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	catalog := Dictionary with: 'valid book'->10*euro.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	self assert: (OrderedCollection with: 'valid book') equals: (facade listCart: newCartID).! !

!methodRemoval: RestInterfaceFacadeTest #test03AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:14:47'!
test03AddingToCartWithValidIDResultsInAddingToCartItems
	
	| authenticator catalog facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	catalog := Dictionary with: 'valid book'->10*euro.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	self assert: (OrderedCollection with: 'valid book') equals: (facade listCart: newCartID).!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 10:17:07'!
addToCart: aCartID copies: aNumberOfCopies ofItem: anItem
	
	! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 10:18:58' prior: 50559943!
addToCart: aCartID copies: aNumberOfCopies ofItem: anItem
	
	(idToCartMappings at: aCartID) add: aNumberOfCopies of: anItem.! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:19:08'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:19:08'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:19:08'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:19:08'!
ERROR!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:19:17' prior: 50559899!
test04AddingToCartWithValidIDResultsInAddingToCartItems
	
	| authenticator catalog facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	self assert: (OrderedCollection with: 'valid book') equals: (facade listCart: newCartID).! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:19:19'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:19:19'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:19:19'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:19:19'!
ERROR!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 10:19:45' prior: 50559738!
createCartForUser: aUsername withPassword: aPassword
		
	| newCart |	
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		| newID |
		newCart:= Cart acceptingItemsOf: catalog.
		newID := self generateNewID.
		idToCartMappings add: (newID->newCart).
		^newID.
	].
	
	^self error: self class invalidUserErrorMessage.! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:19:49'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:19:49'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:19:49'!
PASSED!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:23:32'!
test03listingCartForInvalidIDResultsInError
	
	| authenticator catalog facade |
	
	authenticator := UserAuthenticatorSimulator with: Dictionary new.
	
	catalog := Dictionary new.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog.
	
	self should: [ facade listCart: 0. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade invalidCartIDErrorMessage.
	].! !

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:23:43'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:23:43'!
ERROR!
!RestInterfaceFacade class methodsFor: 'error messages' stamp: 'TC&OLT 11/7/2022 10:24:00'!
invalidCartIDErrorMessage
	
	^'Invalid cart ID.'.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 10:24:25' prior: 50559725!
listCart: aCartID
	
	^(idToCartMappings at: aCartID ifAbsent: [ ^self error: self class invalidCartIDErrorMessage. ]) items.! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:24:29'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:24:29'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:24:29'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:24:29'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:24:29'!
ERROR!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:24:46' prior: 50560036!
test03listingCartForInvalidIDResultsInError
	
	| authenticator catalog facade |
	
	authenticator := UserAuthenticatorSimulator with: Dictionary new.
	
	catalog := Dictionary new.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog.
	
	self should: [ facade listCart: 0. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	].! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:24:48'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:24:48'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:24:48'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:24:48'!
PASSED!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:29:45'!
test05AddingToCartWithInvalidIDResultsInError
	
	| authenticator catalog facade |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog.
	
	self should: [ facade addToCart: 0 copies: 1 ofItem: 'valid book'. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	].! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:30:58'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:30:58'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:30:58'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:30:58'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:30:58'!
FAILURE!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:30:58'!
FAILURE!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 10:32:45' prior: 50560010!
createCartForUser: aUsername withPassword: aPassword
		
	| newCart |	
		
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		| newID |
		newCart := Cart acceptingItemsOf: catalog.
		newID := self generateNewID.
		idToCartMappings add: (newID->newCart).
		^newID.
	].
	
	^self error: self class invalidUserErrorMessage.! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:33:45'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:33:45'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:33:45'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:33:45'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:33:45'!
FAILURE!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:33:45'!
FAILURE!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 10:34:30' prior: 50559949!
addToCart: aCartID copies: aNumberOfCopies ofItem: anItem
	
	(idToCartMappings at: aCartID ifAbsent: [^self error: self class invalidCartIDErrorMessage. ] ) add: aNumberOfCopies of: anItem.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 10:34:31' prior: 50560210!
addToCart: aCartID copies: aNumberOfCopies ofItem: anItem
	
	(idToCartMappings at: aCartID ifAbsent: [ ^self error: self class invalidCartIDErrorMessage. ] ) add: aNumberOfCopies of: anItem.! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:34:35'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:34:35'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:34:35'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:34:35'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:34:35'!
PASSED!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 10:35:37' prior: 50560172!
createCartForUser: aUsername withPassword: aPassword
	
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		| newCart newID |
		newCart := Cart acceptingItemsOf: catalog.
		newID := self generateNewID.
		idToCartMappings add: (newID->newCart).
		^newID.
	].
	
	^self error: self class invalidUserErrorMessage.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 10:35:44' prior: 50560249!
createCartForUser: aUsername withPassword: aPassword
	
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		| newCart newID |
		
		newCart := Cart acceptingItemsOf: catalog.
		newID := self generateNewID.
		idToCartMappings add: (newID->newCart).
		^newID.
	].
	
	^self error: self class invalidUserErrorMessage.! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:35:48'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:35:48'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:35:48'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:35:48'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:35:48'!
PASSED!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:36:07' prior: 50560094!
test03listingCartForInvalidIDResultsInError
	
	| authenticator catalog facade |
	
	authenticator := UserAuthenticatorSimulator with: Dictionary new.
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog.
	
	self should: [ facade listCart: 0. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	].! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:36:13' prior: 50560297!
test03listingCartForInvalidIDResultsInError
	
	| authenticator catalog facade |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog.
	
	self should: [ facade listCart: 0. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	].! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:37:03' prior: 50559699!
test01CartCantBeCreatedForAnInvalidUser
	
	"no se puede crear carrito cuando no se puede autenticar al usuario. No es responsabilidad nuestra autenticar, lo hace un sistma externo (lo simulás)."
	
	| authenticator facade catalog |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary new).
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog.
	
	self should: [ facade createCartForUser: 'user' withPassword: 'password'. ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidUserErrorMessage.
	].! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:37:05'!
PASSED!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 10:37:34' prior: 50556655!
test02CartIsCreatedForAValidUser
	
	| authenticator facade catalog newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn:catalog.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'.
	
	self assert: (facade listCart: newCartID) isEmpty.! !

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:37:36'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:37:42'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:37:42'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:37:42'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:37:42'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:37:42'!
PASSED!
!Behavior method!
with: aDictionaryWithUsernamesAndPasswords
	#_coverageTracker7046879_ markAsExecuted.
	^ #_coverageTracker7046879_
		coverAll:
			{57 to: 71}
		evaluating: [
			(#_coverageTracker7046879_
				coverAll:
					{53 to: 55}
				evaluating: [
					(#_coverageTracker7046879_
						coverAll:
							{48 to: 51}
						byLiteralOrPseudoVariable: self) new ]) initializeWith:
				(#_coverageTracker7046879_
					cover: (73 to: 108)
					declaredAt: (7 to: 42)
					by: aDictionaryWithUsernamesAndPasswords) ].! !
!Behavior method!
initializeWith: aDictionaryWithUsersAndPasswords
	#_coverageTracker7048531_ markAsExecuted.
	#_coverageTracker7048531_
		cover: (53 to: 69)
		declaredAt: (53 to: 69)
		by:
			(usersAndPasswords _ #_coverageTracker7048531_
				cover: (74 to: 105)
				declaredAt: (17 to: 48)
				by: aDictionaryWithUsersAndPasswords).! !
!Behavior method!
authenticatingWith: anAuthenticator admitingItemsOn: aCatalog
	#_coverageTracker7047883_ markAsExecuted.
	^ #_coverageTracker7047883_
		coverAll:
			{76 to: 104. 122 to: 137}
		evaluating: [
			(#_coverageTracker7047883_
				coverAll:
					{72 to: 74}
				evaluating: [
					(#_coverageTracker7047883_
						coverAll:
							{67 to: 70}
						byLiteralOrPseudoVariable: self) new ])
				initializeAuthenticatingWith:
					(#_coverageTracker7047883_
						cover: (106 to: 120)
						declaredAt: (21 to: 35)
						by: anAuthenticator)
				admitingItemsOn:
					(#_coverageTracker7047883_
						cover: (139 to: 146)
						declaredAt: (54 to: 61)
						by: aCatalog) ].! !
!Behavior method!
initializeAuthenticatingWith: anAuthenticator admitingItemsOn: aCatalog
	#_coverageTracker7048142_ markAsExecuted.
	#_coverageTracker7048142_
		cover: (76 to: 88)
		declaredAt: (76 to: 88)
		by:
			(authenticator _ #_coverageTracker7048142_
				cover: (93 to: 107)
				declaredAt: (31 to: 45)
				by: anAuthenticator).
	#_coverageTracker7048142_
		cover: (111 to: 126)
		declaredAt: (111 to: 126)
		by:
			(idToCartMappings _ #_coverageTracker7048142_
				coverAll:
					{142 to: 144}
				evaluating: [
					(#_coverageTracker7048142_
						coverAll:
							{131 to: 140}
						by: Dictionary) new ]).
	#_coverageTracker7048142_
		cover: (148 to: 153)
		declaredAt: (148 to: 153)
		by:
			(lastID _ #_coverageTracker7048142_
				coverAll:
					{158 to: 158}
				byLiteralOrPseudoVariable: 0).
	#_coverageTracker7048142_
		cover: (162 to: 168)
		declaredAt: (162 to: 168)
		by:
			(catalog _ #_coverageTracker7048142_
				cover: (173 to: 180)
				declaredAt: (64 to: 71)
				by: aCatalog).! !
!Behavior method!
createCartForUser: aUsername withPassword: aPassword
	#_coverageTracker7047497_ markAsExecuted.
	#_coverageTracker7047497_
		coverAll:
			{129 to: 135}
		evaluating: [
			(#_coverageTracker7047497_
				coverAll:
					{72 to: 92. 104 to: 116}
				evaluating: [
					(#_coverageTracker7047497_
						cover: (58 to: 70)
						declaredAt: (58 to: 70)
						by: authenticator)
						authenticateUsername:
							(#_coverageTracker7047497_
								cover: (94 to: 102)
								declaredAt: (20 to: 28)
								by: aUsername)
						withPassword:
							(#_coverageTracker7047497_
								cover: (118 to: 126)
								declaredAt: (44 to: 52)
								by: aPassword) ]) ifTrue: [ | newCart newID |
				#_coverageTracker7047497_
					cover: (164 to: 170)
					declaredAt: (143 to: 149)
					by:
						(newCart _ #_coverageTracker7047497_
							coverAll:
								{180 to: 196}
							evaluating: [
								(#_coverageTracker7047497_
									coverAll:
										{175 to: 178}
									by: Cart) acceptingItemsOf:
									(#_coverageTracker7047497_
										cover: (198 to: 204)
										declaredAt: (198 to: 204)
										by: catalog) ]).
				#_coverageTracker7047497_
					cover: (209 to: 213)
					declaredAt: (151 to: 155)
					by:
						(newID _ #_coverageTracker7047497_
							coverAll:
								{223 to: 235}
							evaluating: [
								(#_coverageTracker7047497_
									coverAll:
										{218 to: 221}
									byLiteralOrPseudoVariable: self) generateNewID ]).
				#_coverageTracker7047497_
					coverAll:
						{257 to: 260}
					evaluating: [
						(#_coverageTracker7047497_
							cover: (240 to: 255)
							declaredAt: (240 to: 255)
							by: idToCartMappings) add:
							(#_coverageTracker7047497_
								coverAll:
									{268 to: 269}
								evaluating: [
									(#_coverageTracker7047497_
										cover: (263 to: 267)
										declaredAt: (151 to: 155)
										by: newID) ->
										(#_coverageTracker7047497_
											cover: (270 to: 276)
											declaredAt: (143 to: 149)
											by: newCart) ]) ].
				^ #_coverageTracker7047497_
					cover: (283 to: 287)
					declaredAt: (151 to: 155)
					by: newID ]].
	^ #_coverageTracker7047497_
		coverAll:
			{303 to: 308}
		evaluating: [
			(#_coverageTracker7047497_
				coverAll:
					{298 to: 301}
				byLiteralOrPseudoVariable: self) error:
				(#_coverageTracker7047497_
					coverAll:
						{321 to: 343}
					evaluating: [
						(#_coverageTracker7047497_
							coverAll:
								{315 to: 319}
							evaluating: [
								(#_coverageTracker7047497_
									coverAll:
										{310 to: 313}
									byLiteralOrPseudoVariable: self) class ]) invalidUserErrorMessage ]) ].! !
!Behavior method!
authenticateUsername: aUsername withPassword: aPassword
	#_coverageTracker7047314_ markAsExecuted.
	^ #_coverageTracker7047314_
		coverAll:
			{116 to: 116}
		evaluating: [
			(#_coverageTracker7047314_
				coverAll:
					{79 to: 81. 93 to: 101}
				evaluating: [
					(#_coverageTracker7047314_
						cover: (61 to: 77)
						declaredAt: (61 to: 77)
						by: usersAndPasswords)
						at:
							(#_coverageTracker7047314_
								cover: (83 to: 91)
								declaredAt: (23 to: 31)
								by: aUsername)
						ifAbsent: [ ^ #_coverageTracker7047314_
								coverAll:
									{106 to: 110}
								byLiteralOrPseudoVariable: false ]]) =
				(#_coverageTracker7047314_
					cover: (118 to: 126)
					declaredAt: (47 to: 55)
					by: aPassword) ].! !
!Behavior method!
invalidUserErrorMessage
	#_coverageTracker7048050_ markAsExecuted.
	^ #_coverageTracker7048050_
		coverAll:
			{29 to: 43}
		byLiteralOrPseudoVariable: 'Invalid user.'.! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:49:02'!
PASSED!
!Behavior method!
acceptingItemsOf: aCatalog
	#_coverageTracker7047605_ markAsExecuted.
	^ #_coverageTracker7047605_
		coverAll:
			{40 to: 66}
		evaluating: [
			(#_coverageTracker7047605_
				coverAll:
					{36 to: 38}
				evaluating: [
					(#_coverageTracker7047605_
						coverAll:
							{31 to: 34}
						byLiteralOrPseudoVariable: self) new ]) initializeAcceptingItemsOf:
				(#_coverageTracker7047605_
					cover: (68 to: 75)
					declaredAt: (19 to: 26)
					by: aCatalog) ].! !
!Behavior method!
initializeAcceptingItemsOf: aCatalog
	#_coverageTracker7047065_ markAsExecuted.
	#_coverageTracker7047065_
		cover: (40 to: 46)
		declaredAt: (40 to: 46)
		by:
			(catalog _ #_coverageTracker7047065_
				cover: (51 to: 58)
				declaredAt: (29 to: 36)
				by: aCatalog).
	#_coverageTracker7047065_
		cover: (62 to: 66)
		declaredAt: (62 to: 66)
		by:
			(items _ #_coverageTracker7047065_
				coverAll:
					{89 to: 91}
				evaluating: [
					(#_coverageTracker7047065_
						coverAll:
							{71 to: 87}
						by: OrderedCollection) new ]).! !
!Behavior method!
generateNewID
	| newID |
	#_coverageTracker7046986_ markAsExecuted.
	#_coverageTracker7046986_
		cover: (31 to: 35)
		declaredAt: (20 to: 24)
		by:
			(newID _ #_coverageTracker7046986_
				cover: (40 to: 45)
				declaredAt: (40 to: 45)
				by: lastID).
	#_coverageTracker7046986_
		cover: (61 to: 66)
		declaredAt: (40 to: 45)
		by:
			(lastID _ #_coverageTracker7046986_
				coverAll:
					{68 to: 68}
				evaluating: [
					(#_coverageTracker7046986_
						cover: (51 to: 56)
						declaredAt: (40 to: 45)
						by: lastID) +
						(#_coverageTracker7046986_
							coverAll:
								{70 to: 70}
							byLiteralOrPseudoVariable: 1) ]).
	^ #_coverageTracker7046986_
		cover: (77 to: 81)
		declaredAt: (20 to: 24)
		by: newID.! !
!Behavior method!
listCart: aCartID
	#_coverageTracker7047579_ markAsExecuted.
	^ #_coverageTracker7047579_
		coverAll:
			{119 to: 123}
		evaluating: [
			(#_coverageTracker7047579_
				coverAll:
					{41 to: 43. 53 to: 61}
				evaluating: [
					(#_coverageTracker7047579_
						cover: (24 to: 39)
						declaredAt: (24 to: 39)
						by: idToCartMappings)
						at:
							(#_coverageTracker7047579_
								cover: (45 to: 51)
								declaredAt: (11 to: 17)
								by: aCartID)
						ifAbsent: [ ^ #_coverageTracker7047579_
								coverAll:
									{71 to: 76}
								evaluating: [
									(#_coverageTracker7047579_
										coverAll:
											{66 to: 69}
										byLiteralOrPseudoVariable: self) error:
										(#_coverageTracker7047579_
											coverAll:
												{89 to: 113}
											evaluating: [
												(#_coverageTracker7047579_
													coverAll:
														{83 to: 87}
													evaluating: [
														(#_coverageTracker7047579_
															coverAll:
																{78 to: 81}
															byLiteralOrPseudoVariable: self) class ]) invalidCartIDErrorMessage ]) ]]]) items ].! !
!Behavior method!
items
	#_coverageTracker7047076_ markAsExecuted.
	^ #_coverageTracker7047076_
		coverAll:
			{17 to: 20}
		evaluating: [
			(#_coverageTracker7047076_
				cover: (11 to: 15)
				declaredAt: (11 to: 15)
				by: items) copy ].! !

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:49:02'!
PASSED!
!Behavior method!
invalidCartIDErrorMessage
	#_coverageTracker7046643_ markAsExecuted.
	^ #_coverageTracker7046643_
		coverAll:
			{31 to: 48}
		byLiteralOrPseudoVariable: 'Invalid cart ID.'.! !

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:49:02'!
PASSED!
!Behavior method!
addToCart: aCartID copies: aNumberOfCopies ofItem: anItem
	#_coverageTracker7047841_ markAsExecuted.
	#_coverageTracker7047841_
		coverAll:
			{159 to: 162. 180 to: 182}
		evaluating: [
			(#_coverageTracker7047841_
				coverAll:
					{80 to: 82. 92 to: 100}
				evaluating: [
					(#_coverageTracker7047841_
						cover: (63 to: 78)
						declaredAt: (63 to: 78)
						by: idToCartMappings)
						at:
							(#_coverageTracker7047841_
								cover: (84 to: 90)
								declaredAt: (12 to: 18)
								by: aCartID)
						ifAbsent: [ ^ #_coverageTracker7047841_
								coverAll:
									{110 to: 115}
								evaluating: [
									(#_coverageTracker7047841_
										coverAll:
											{105 to: 108}
										byLiteralOrPseudoVariable: self) error:
										(#_coverageTracker7047841_
											coverAll:
												{128 to: 152}
											evaluating: [
												(#_coverageTracker7047841_
													coverAll:
														{122 to: 126}
													evaluating: [
														(#_coverageTracker7047841_
															coverAll:
																{117 to: 120}
															byLiteralOrPseudoVariable: self) class ]) invalidCartIDErrorMessage ]) ]]])
				add:
					(#_coverageTracker7047841_
						cover: (164 to: 178)
						declaredAt: (28 to: 42)
						by: aNumberOfCopies)
				of:
					(#_coverageTracker7047841_
						cover: (184 to: 189)
						declaredAt: (52 to: 57)
						by: anItem) ].! !
!Behavior method!
add: aQuantity of: anItem
	#_coverageTracker7048021_ markAsExecuted.
	#_coverageTracker7048021_
		coverAll:
			{34 to: 55}
		evaluating: [
			(#_coverageTracker7048021_
				coverAll:
					{29 to: 32}
				byLiteralOrPseudoVariable: self) assertIsValidQuantity:
				(#_coverageTracker7048021_
					cover: (57 to: 65)
					declaredAt: (6 to: 14)
					by: aQuantity) ].
	#_coverageTracker7048021_
		coverAll:
			{74 to: 91}
		evaluating: [
			(#_coverageTracker7048021_
				coverAll:
					{69 to: 72}
				byLiteralOrPseudoVariable: self) assertIsValidItem:
				(#_coverageTracker7048021_
					cover: (93 to: 98)
					declaredAt: (20 to: 25)
					by: anItem) ].
	#_coverageTracker7048021_
		coverAll:
			{105 to: 107. 119 to: 121}
		evaluating: [
			(#_coverageTracker7048021_
				coverAll:
					{103 to: 103}
				byLiteralOrPseudoVariable: 1)
				to:
					(#_coverageTracker7048021_
						cover: (109 to: 117)
						declaredAt: (6 to: 14)
						by: aQuantity)
				do: [ :aNumber |
					#_coverageTracker7048021_
						coverAll:
							{142 to: 145}
						evaluating: [
							(#_coverageTracker7048021_
								cover: (136 to: 140)
								declaredAt: (136 to: 140)
								by: items) add:
								(#_coverageTracker7048021_
									cover: (147 to: 152)
									declaredAt: (20 to: 25)
									by: anItem) ]]].! !
!Behavior method!
assertIsValidQuantity: aQuantity
	#_coverageTracker7048196_ markAsExecuted.
	#_coverageTracker7048196_
		coverAll:
			{63 to: 70}
		evaluating: [
			(#_coverageTracker7048196_
				coverAll:
					{46 to: 61}
				evaluating: [
					(#_coverageTracker7048196_
						cover: (36 to: 44)
						declaredAt: (24 to: 32)
						by: aQuantity) strictlyPositive ]) ifFalse: [
				#_coverageTracker7048196_
					coverAll:
						{79 to: 84}
					evaluating: [
						(#_coverageTracker7048196_
							coverAll:
								{74 to: 77}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker7048196_
								coverAll:
									{91 to: 117}
								evaluating: [
									(#_coverageTracker7048196_
										coverAll:
											{86 to: 89}
										byLiteralOrPseudoVariable: self) invalidQuantityErrorMessage ]) ]]].! !
!Behavior method!
assertIsValidItem: anItem
	#_coverageTracker7048171_ markAsExecuted.
	#_coverageTracker7048171_
		coverAll:
			{59 to: 66}
		evaluating: [
			(#_coverageTracker7048171_
				coverAll:
					{38 to: 49}
				evaluating: [
					(#_coverageTracker7048171_
						cover: (30 to: 36)
						declaredAt: (30 to: 36)
						by: catalog) includesKey:
						(#_coverageTracker7048171_
							cover: (51 to: 56)
							declaredAt: (20 to: 25)
							by: anItem) ]) ifFalse: [
				#_coverageTracker7048171_
					coverAll:
						{75 to: 80}
					evaluating: [
						(#_coverageTracker7048171_
							coverAll:
								{70 to: 73}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker7048171_
								coverAll:
									{87 to: 109}
								evaluating: [
									(#_coverageTracker7048171_
										coverAll:
											{82 to: 85}
										byLiteralOrPseudoVariable: self) invalidItemErrorMessage ]) ]]].! !

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:49:02'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:49:02'!
PASSED!

!methodRemoval: RestInterfaceFacade #initializeWith: stamp: 'TC&OLT 11/7/2022 10:49:14'!
initializeWith: anAuthenticator
	
	authenticator := anAuthenticator.
	idToCartMappings := Dictionary new.
	lastID := 0.!

!methodRemoval: RestInterfaceFacade class #with: stamp: 'TC&OLT 11/7/2022 10:49:22'!
with: anAuthenticator
	
	^self new initializeWith: anAuthenticator.!
!Behavior method!
with: aDictionaryWithUsernamesAndPasswords
	#_coverageTracker7074275_ markAsExecuted.
	^ #_coverageTracker7074275_
		coverAll:
			{57 to: 71}
		evaluating: [
			(#_coverageTracker7074275_
				coverAll:
					{53 to: 55}
				evaluating: [
					(#_coverageTracker7074275_
						coverAll:
							{48 to: 51}
						byLiteralOrPseudoVariable: self) new ]) initializeWith:
				(#_coverageTracker7074275_
					cover: (73 to: 108)
					declaredAt: (7 to: 42)
					by: aDictionaryWithUsernamesAndPasswords) ].! !
!Behavior method!
initializeWith: aDictionaryWithUsersAndPasswords
	#_coverageTracker7076053_ markAsExecuted.
	#_coverageTracker7076053_
		cover: (53 to: 69)
		declaredAt: (53 to: 69)
		by:
			(usersAndPasswords _ #_coverageTracker7076053_
				cover: (74 to: 105)
				declaredAt: (17 to: 48)
				by: aDictionaryWithUsersAndPasswords).! !
!Behavior method!
authenticatingWith: anAuthenticator admitingItemsOn: aCatalog
	#_coverageTracker7075293_ markAsExecuted.
	^ #_coverageTracker7075293_
		coverAll:
			{76 to: 104. 122 to: 137}
		evaluating: [
			(#_coverageTracker7075293_
				coverAll:
					{72 to: 74}
				evaluating: [
					(#_coverageTracker7075293_
						coverAll:
							{67 to: 70}
						byLiteralOrPseudoVariable: self) new ])
				initializeAuthenticatingWith:
					(#_coverageTracker7075293_
						cover: (106 to: 120)
						declaredAt: (21 to: 35)
						by: anAuthenticator)
				admitingItemsOn:
					(#_coverageTracker7075293_
						cover: (139 to: 146)
						declaredAt: (54 to: 61)
						by: aCatalog) ].! !
!Behavior method!
initializeAuthenticatingWith: anAuthenticator admitingItemsOn: aCatalog
	#_coverageTracker7075597_ markAsExecuted.
	#_coverageTracker7075597_
		cover: (76 to: 88)
		declaredAt: (76 to: 88)
		by:
			(authenticator _ #_coverageTracker7075597_
				cover: (93 to: 107)
				declaredAt: (31 to: 45)
				by: anAuthenticator).
	#_coverageTracker7075597_
		cover: (111 to: 126)
		declaredAt: (111 to: 126)
		by:
			(idToCartMappings _ #_coverageTracker7075597_
				coverAll:
					{142 to: 144}
				evaluating: [
					(#_coverageTracker7075597_
						coverAll:
							{131 to: 140}
						by: Dictionary) new ]).
	#_coverageTracker7075597_
		cover: (148 to: 153)
		declaredAt: (148 to: 153)
		by:
			(lastID _ #_coverageTracker7075597_
				coverAll:
					{158 to: 158}
				byLiteralOrPseudoVariable: 0).
	#_coverageTracker7075597_
		cover: (162 to: 168)
		declaredAt: (162 to: 168)
		by:
			(catalog _ #_coverageTracker7075597_
				cover: (173 to: 180)
				declaredAt: (64 to: 71)
				by: aCatalog).! !
!Behavior method!
createCartForUser: aUsername withPassword: aPassword
	#_coverageTracker7074898_ markAsExecuted.
	#_coverageTracker7074898_
		coverAll:
			{129 to: 135}
		evaluating: [
			(#_coverageTracker7074898_
				coverAll:
					{72 to: 92. 104 to: 116}
				evaluating: [
					(#_coverageTracker7074898_
						cover: (58 to: 70)
						declaredAt: (58 to: 70)
						by: authenticator)
						authenticateUsername:
							(#_coverageTracker7074898_
								cover: (94 to: 102)
								declaredAt: (20 to: 28)
								by: aUsername)
						withPassword:
							(#_coverageTracker7074898_
								cover: (118 to: 126)
								declaredAt: (44 to: 52)
								by: aPassword) ]) ifTrue: [ | newCart newID |
				#_coverageTracker7074898_
					cover: (164 to: 170)
					declaredAt: (143 to: 149)
					by:
						(newCart _ #_coverageTracker7074898_
							coverAll:
								{180 to: 196}
							evaluating: [
								(#_coverageTracker7074898_
									coverAll:
										{175 to: 178}
									by: Cart) acceptingItemsOf:
									(#_coverageTracker7074898_
										cover: (198 to: 204)
										declaredAt: (198 to: 204)
										by: catalog) ]).
				#_coverageTracker7074898_
					cover: (209 to: 213)
					declaredAt: (151 to: 155)
					by:
						(newID _ #_coverageTracker7074898_
							coverAll:
								{223 to: 235}
							evaluating: [
								(#_coverageTracker7074898_
									coverAll:
										{218 to: 221}
									byLiteralOrPseudoVariable: self) generateNewID ]).
				#_coverageTracker7074898_
					coverAll:
						{257 to: 260}
					evaluating: [
						(#_coverageTracker7074898_
							cover: (240 to: 255)
							declaredAt: (240 to: 255)
							by: idToCartMappings) add:
							(#_coverageTracker7074898_
								coverAll:
									{268 to: 269}
								evaluating: [
									(#_coverageTracker7074898_
										cover: (263 to: 267)
										declaredAt: (151 to: 155)
										by: newID) ->
										(#_coverageTracker7074898_
											cover: (270 to: 276)
											declaredAt: (143 to: 149)
											by: newCart) ]) ].
				^ #_coverageTracker7074898_
					cover: (283 to: 287)
					declaredAt: (151 to: 155)
					by: newID ]].
	^ #_coverageTracker7074898_
		coverAll:
			{303 to: 308}
		evaluating: [
			(#_coverageTracker7074898_
				coverAll:
					{298 to: 301}
				byLiteralOrPseudoVariable: self) error:
				(#_coverageTracker7074898_
					coverAll:
						{321 to: 343}
					evaluating: [
						(#_coverageTracker7074898_
							coverAll:
								{315 to: 319}
							evaluating: [
								(#_coverageTracker7074898_
									coverAll:
										{310 to: 313}
									byLiteralOrPseudoVariable: self) class ]) invalidUserErrorMessage ]) ].! !
!Behavior method!
authenticateUsername: aUsername withPassword: aPassword
	#_coverageTracker7074557_ markAsExecuted.
	^ #_coverageTracker7074557_
		coverAll:
			{116 to: 116}
		evaluating: [
			(#_coverageTracker7074557_
				coverAll:
					{79 to: 81. 93 to: 101}
				evaluating: [
					(#_coverageTracker7074557_
						cover: (61 to: 77)
						declaredAt: (61 to: 77)
						by: usersAndPasswords)
						at:
							(#_coverageTracker7074557_
								cover: (83 to: 91)
								declaredAt: (23 to: 31)
								by: aUsername)
						ifAbsent: [ ^ #_coverageTracker7074557_
								coverAll:
									{106 to: 110}
								byLiteralOrPseudoVariable: false ]]) =
				(#_coverageTracker7074557_
					cover: (118 to: 126)
					declaredAt: (47 to: 55)
					by: aPassword) ].! !
!Behavior method!
invalidUserErrorMessage
	#_coverageTracker7075492_ markAsExecuted.
	^ #_coverageTracker7075492_
		coverAll:
			{29 to: 43}
		byLiteralOrPseudoVariable: 'Invalid user.'.! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 10:49:30'!
PASSED!
!Behavior method!
acceptingItemsOf: aCatalog
	#_coverageTracker7075027_ markAsExecuted.
	^ #_coverageTracker7075027_
		coverAll:
			{40 to: 66}
		evaluating: [
			(#_coverageTracker7075027_
				coverAll:
					{36 to: 38}
				evaluating: [
					(#_coverageTracker7075027_
						coverAll:
							{31 to: 34}
						byLiteralOrPseudoVariable: self) new ]) initializeAcceptingItemsOf:
				(#_coverageTracker7075027_
					cover: (68 to: 75)
					declaredAt: (19 to: 26)
					by: aCatalog) ].! !
!Behavior method!
initializeAcceptingItemsOf: aCatalog
	#_coverageTracker7074450_ markAsExecuted.
	#_coverageTracker7074450_
		cover: (40 to: 46)
		declaredAt: (40 to: 46)
		by:
			(catalog _ #_coverageTracker7074450_
				cover: (51 to: 58)
				declaredAt: (29 to: 36)
				by: aCatalog).
	#_coverageTracker7074450_
		cover: (62 to: 66)
		declaredAt: (62 to: 66)
		by:
			(items _ #_coverageTracker7074450_
				coverAll:
					{89 to: 91}
				evaluating: [
					(#_coverageTracker7074450_
						coverAll:
							{71 to: 87}
						by: OrderedCollection) new ]).! !
!Behavior method!
generateNewID
	| newID |
	#_coverageTracker7074359_ markAsExecuted.
	#_coverageTracker7074359_
		cover: (31 to: 35)
		declaredAt: (20 to: 24)
		by:
			(newID _ #_coverageTracker7074359_
				cover: (40 to: 45)
				declaredAt: (40 to: 45)
				by: lastID).
	#_coverageTracker7074359_
		cover: (61 to: 66)
		declaredAt: (40 to: 45)
		by:
			(lastID _ #_coverageTracker7074359_
				coverAll:
					{68 to: 68}
				evaluating: [
					(#_coverageTracker7074359_
						cover: (51 to: 56)
						declaredAt: (40 to: 45)
						by: lastID) +
						(#_coverageTracker7074359_
							coverAll:
								{70 to: 70}
							byLiteralOrPseudoVariable: 1) ]).
	^ #_coverageTracker7074359_
		cover: (77 to: 81)
		declaredAt: (20 to: 24)
		by: newID.! !
!Behavior method!
listCart: aCartID
	#_coverageTracker7075000_ markAsExecuted.
	^ #_coverageTracker7075000_
		coverAll:
			{119 to: 123}
		evaluating: [
			(#_coverageTracker7075000_
				coverAll:
					{41 to: 43. 53 to: 61}
				evaluating: [
					(#_coverageTracker7075000_
						cover: (24 to: 39)
						declaredAt: (24 to: 39)
						by: idToCartMappings)
						at:
							(#_coverageTracker7075000_
								cover: (45 to: 51)
								declaredAt: (11 to: 17)
								by: aCartID)
						ifAbsent: [ ^ #_coverageTracker7075000_
								coverAll:
									{71 to: 76}
								evaluating: [
									(#_coverageTracker7075000_
										coverAll:
											{66 to: 69}
										byLiteralOrPseudoVariable: self) error:
										(#_coverageTracker7075000_
											coverAll:
												{89 to: 113}
											evaluating: [
												(#_coverageTracker7075000_
													coverAll:
														{83 to: 87}
													evaluating: [
														(#_coverageTracker7075000_
															coverAll:
																{78 to: 81}
															byLiteralOrPseudoVariable: self) class ]) invalidCartIDErrorMessage ]) ]]]) items ].! !
!Behavior method!
items
	#_coverageTracker7074469_ markAsExecuted.
	^ #_coverageTracker7074469_
		coverAll:
			{17 to: 20}
		evaluating: [
			(#_coverageTracker7074469_
				cover: (11 to: 15)
				declaredAt: (11 to: 15)
				by: items) copy ].! !

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 10:49:30'!
PASSED!
!Behavior method!
invalidCartIDErrorMessage
	#_coverageTracker7073986_ markAsExecuted.
	^ #_coverageTracker7073986_
		coverAll:
			{31 to: 48}
		byLiteralOrPseudoVariable: 'Invalid cart ID.'.! !

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:49:30'!
PASSED!
!Behavior method!
addToCart: aCartID copies: aNumberOfCopies ofItem: anItem
	#_coverageTracker7075266_ markAsExecuted.
	#_coverageTracker7075266_
		coverAll:
			{159 to: 162. 180 to: 182}
		evaluating: [
			(#_coverageTracker7075266_
				coverAll:
					{80 to: 82. 92 to: 100}
				evaluating: [
					(#_coverageTracker7075266_
						cover: (63 to: 78)
						declaredAt: (63 to: 78)
						by: idToCartMappings)
						at:
							(#_coverageTracker7075266_
								cover: (84 to: 90)
								declaredAt: (12 to: 18)
								by: aCartID)
						ifAbsent: [ ^ #_coverageTracker7075266_
								coverAll:
									{110 to: 115}
								evaluating: [
									(#_coverageTracker7075266_
										coverAll:
											{105 to: 108}
										byLiteralOrPseudoVariable: self) error:
										(#_coverageTracker7075266_
											coverAll:
												{128 to: 152}
											evaluating: [
												(#_coverageTracker7075266_
													coverAll:
														{122 to: 126}
													evaluating: [
														(#_coverageTracker7075266_
															coverAll:
																{117 to: 120}
															byLiteralOrPseudoVariable: self) class ]) invalidCartIDErrorMessage ]) ]]])
				add:
					(#_coverageTracker7075266_
						cover: (164 to: 178)
						declaredAt: (28 to: 42)
						by: aNumberOfCopies)
				of:
					(#_coverageTracker7075266_
						cover: (184 to: 189)
						declaredAt: (52 to: 57)
						by: anItem) ].! !
!Behavior method!
add: aQuantity of: anItem
	#_coverageTracker7075452_ markAsExecuted.
	#_coverageTracker7075452_
		coverAll:
			{34 to: 55}
		evaluating: [
			(#_coverageTracker7075452_
				coverAll:
					{29 to: 32}
				byLiteralOrPseudoVariable: self) assertIsValidQuantity:
				(#_coverageTracker7075452_
					cover: (57 to: 65)
					declaredAt: (6 to: 14)
					by: aQuantity) ].
	#_coverageTracker7075452_
		coverAll:
			{74 to: 91}
		evaluating: [
			(#_coverageTracker7075452_
				coverAll:
					{69 to: 72}
				byLiteralOrPseudoVariable: self) assertIsValidItem:
				(#_coverageTracker7075452_
					cover: (93 to: 98)
					declaredAt: (20 to: 25)
					by: anItem) ].
	#_coverageTracker7075452_
		coverAll:
			{105 to: 107. 119 to: 121}
		evaluating: [
			(#_coverageTracker7075452_
				coverAll:
					{103 to: 103}
				byLiteralOrPseudoVariable: 1)
				to:
					(#_coverageTracker7075452_
						cover: (109 to: 117)
						declaredAt: (6 to: 14)
						by: aQuantity)
				do: [ :aNumber |
					#_coverageTracker7075452_
						coverAll:
							{142 to: 145}
						evaluating: [
							(#_coverageTracker7075452_
								cover: (136 to: 140)
								declaredAt: (136 to: 140)
								by: items) add:
								(#_coverageTracker7075452_
									cover: (147 to: 152)
									declaredAt: (20 to: 25)
									by: anItem) ]]].! !
!Behavior method!
assertIsValidQuantity: aQuantity
	#_coverageTracker7075677_ markAsExecuted.
	#_coverageTracker7075677_
		coverAll:
			{63 to: 70}
		evaluating: [
			(#_coverageTracker7075677_
				coverAll:
					{46 to: 61}
				evaluating: [
					(#_coverageTracker7075677_
						cover: (36 to: 44)
						declaredAt: (24 to: 32)
						by: aQuantity) strictlyPositive ]) ifFalse: [
				#_coverageTracker7075677_
					coverAll:
						{79 to: 84}
					evaluating: [
						(#_coverageTracker7075677_
							coverAll:
								{74 to: 77}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker7075677_
								coverAll:
									{91 to: 117}
								evaluating: [
									(#_coverageTracker7075677_
										coverAll:
											{86 to: 89}
										byLiteralOrPseudoVariable: self) invalidQuantityErrorMessage ]) ]]].! !
!Behavior method!
assertIsValidItem: anItem
	#_coverageTracker7075643_ markAsExecuted.
	#_coverageTracker7075643_
		coverAll:
			{59 to: 66}
		evaluating: [
			(#_coverageTracker7075643_
				coverAll:
					{38 to: 49}
				evaluating: [
					(#_coverageTracker7075643_
						cover: (30 to: 36)
						declaredAt: (30 to: 36)
						by: catalog) includesKey:
						(#_coverageTracker7075643_
							cover: (51 to: 56)
							declaredAt: (20 to: 25)
							by: anItem) ]) ifFalse: [
				#_coverageTracker7075643_
					coverAll:
						{75 to: 80}
					evaluating: [
						(#_coverageTracker7075643_
							coverAll:
								{70 to: 73}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker7075643_
								coverAll:
									{87 to: 109}
								evaluating: [
									(#_coverageTracker7075643_
										coverAll:
											{82 to: 85}
										byLiteralOrPseudoVariable: self) invalidItemErrorMessage ]) ]]].! !

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 10:49:30'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 10:49:30'!
PASSED!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 11:01:55'!
test06CheckoutOfInvalidCartResultsInError! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 11:02:48' prior: 50561354!
test06CheckoutOfInvalidCartResultsInError
	
	! !
!RestInterfaceFacadeTest methodsFor: 'nil' stamp: 'TC&OLT 11/7/2022 11:08:22' overrides: 16961394!
setUp
	
	debitBehavior := [ :anAmount :aCreditCard | ].! !
!RestInterfaceFacadeTest methodsFor: 'nil' stamp: 'TC&OLT 11/7/2022 11:09:03'!
debit: anAmount from: aCreditCard 

	^debitBehavior value: anAmount value: aCreditCard ! !
!RestInterfaceFacadeTest methodsFor: 'merchant processor' stamp: 'TC&OLT 11/7/2022 11:09:14' prior: 50561369!
debit: anAmount from: aCreditCard 

	^debitBehavior value: anAmount value: aCreditCard.! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 11:13:54' prior: 50561359!
test06CheckoutOfInvalidCartResultsInError
	
	| authenticator catalog merchantProcessor facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	merchantProcessor := self.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog checkingOutThrough: merchantProcessor.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'. 
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	"self should: [ facade checkOutCart: newCartID ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	]."! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 11:17:40' prior: 50561382!
test06CheckoutOfInvalidCartResultsInError
	
	| authenticator catalog merchantProcessor facade newCartID |
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: 'bingus'->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	merchantProcessor := self.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog checkingOutThrough: merchantProcessor.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'. 
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	"self should: [ facade checkOutCart: newCartID withCredItCard: creditCard on:  ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	]."! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 11:25:27' prior: 50561410!
test06CheckoutOfInvalidCartResultsInError
	
	| username authenticator catalog merchantProcessor facade newCartID expirationDate creditCard |
	
	username := 'bingus'.
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: username->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	merchantProcessor := self.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog checkingOutThrough: merchantProcessor.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'. 
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	expirationDate := November/07/2022.
	
	creditCard := CreditCard expiringOn: expirationDate.
	
	self should: [ facade checkOutCart: newCartID withCreditCard: creditCard expiringOn: expirationDate ofUser: username  ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	].! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 11:25:32'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 11:25:32'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 11:25:32'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 11:25:32'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 11:25:32'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfInvalidCartResultsInError stamp: 'TC&OLT 11/7/2022 11:25:32'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfInvalidCartResultsInError stamp: 'TC&OLT 11/7/2022 11:25:32'!
ERROR!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 11:36:38' prior: 50561439!
test06CheckoutOfInvalidCartResultsInError
	
	| username authenticator catalog merchantProcessor facade newCartID expirationDate creditCardNumber |
	
	username := 'bingus'.
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: username->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	merchantProcessor := self.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog checkingOutThrough: merchantProcessor.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'. 
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	expirationDate := November/07/2022.
	
	creditCardNumber := '5400000000000001'.
	
	self should: [ facade checkOutCart: newCartID withCreditCardNumber: creditCardNumber expiringOn: expirationDate ofUser: username  ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	].! !
!RestInterfaceFacade class methodsFor: 'instance creation' stamp: 'TC&OLT 11/7/2022 11:37:42'!
authenticatingWith: anAuthenticator admitingItemsOn: aCatalog checkingOutThrough: aMerchantProcessor
	
	^self new initializeAuthenticatingWith: anAuthenticator admitingItemsOn: aCatalog checkingOutThrough: aMerchantProcessor.! !
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 11:38:02'!
initializeAuthenticatingWith: anAuthenticator admitingItemsOn: aCatalog checkingOutThrough: aMerchantProcessor
	
	authenticator := anAuthenticator.
	idToCartMappings := Dictionary new.
	lastID := 0.
	catalog := aCatalog.! !

Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMappings lastID catalog merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceFacade category: 'TusLibros' stamp: 'TC&OLT 11/7/2022 11:38:09'!
Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMappings lastID catalog merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 11:38:23' prior: 50561546!
initializeAuthenticatingWith: anAuthenticator admitingItemsOn: aCatalog checkingOutThrough: aMerchantProcessor
	
	authenticator := anAuthenticator.
	idToCartMappings := Dictionary new.
	lastID := 0.
	catalog := aCatalog.
	merchantProcessor := aMerchantProcessor.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 11:41:19'!
checkOutCart: aCartID withCreditCardNumber: aCreditCardNumber expiringOn: anExpirationDate ofUser: aUsername
	
	! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 11:42:02'!
test07CheckoutOfInvalidCartResultsInError
	
	| username authenticator catalog merchantProcessor facade newCartID expirationDate creditCardNumber |
	
	username := 'bingus'.
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: username->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	merchantProcessor := self.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog checkingOutThrough: merchantProcessor.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'. 
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	expirationDate := November/07/2022.
	
	creditCardNumber := '5400000000000001'.
	
	self should: [ facade checkOutCart: newCartID withCreditCardNumber: creditCardNumber expiringOn: expirationDate ofUser: username  ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	].! !

!methodRemoval: RestInterfaceFacadeTest #test07CheckoutOfInvalidCartResultsInError stamp: 'TC&OLT 11/7/2022 11:42:21'!
test07CheckoutOfInvalidCartResultsInError
	
	| username authenticator catalog merchantProcessor facade newCartID expirationDate creditCardNumber |
	
	username := 'bingus'.
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: username->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	merchantProcessor := self.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog checkingOutThrough: merchantProcessor.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'. 
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	expirationDate := November/07/2022.
	
	creditCardNumber := '5400000000000001'.
	
	self should: [ facade checkOutCart: newCartID withCreditCardNumber: creditCardNumber expiringOn: expirationDate ofUser: username  ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	].!
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 11:50:12'!
test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase
	
	| username authenticator catalog merchantProcessor facade newCartID expirationDate creditCardNumber |
	
	username := 'bingus'.
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: username->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	merchantProcessor := self.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog checkingOutThrough: merchantProcessor.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'. 
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	expirationDate := November/07/2022.
	
	creditCardNumber := '5400000000000001'.
	
	"self assert: (facade listPurchasesforUser: username withPassword: 'my beloved') equals: OrderedCollection ."! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 11:51:12' prior: 50561501!
test06CheckoutOfInvalidCartResultsInError
	
	| username authenticator catalog merchantProcessor facade newCartID expirationDate creditCardNumber |
	
	username := 'bingus'.
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: username->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	merchantProcessor := self.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog checkingOutThrough: merchantProcessor.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'. 
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	expirationDate := November/07/2022.
	
	creditCardNumber := '5400000000000001'.
	
	self should: [ facade checkOutCart: newCartID withCreditCardNumber: creditCardNumber expiringOn: expirationDate ofUser: username.  ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	].! !
!RestInterfaceFacadeTest methodsFor: 'tests' stamp: 'TC&OLT 11/7/2022 11:51:57' prior: 50561661!
test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase
	
	| username authenticator catalog merchantProcessor facade newCartID expirationDate creditCardNumber |
	
	username := 'bingus'.
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: username->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	merchantProcessor := self.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog checkingOutThrough: merchantProcessor.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'. 
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	expirationDate := November/07/2022.
	
	creditCardNumber := '5400000000000001'.
	
	facade checkOutCart: newCartID withCreditCardNumber: creditCardNumber expiringOn: expirationDate ofUser: username.
	
	self assert: (facade listPurchasesforUser: username withPassword: 'my beloved') equals: (OrderedCollection with: (Sale of: 10*euro)).! !

!methodRemoval: RestInterfaceFacadeTest #test06CheckoutOfInvalidCartResultsInError stamp: 'TC&OLT 11/7/2022 11:53:24'!
test06CheckoutOfInvalidCartResultsInError
	
	| username authenticator catalog merchantProcessor facade newCartID expirationDate creditCardNumber |
	
	username := 'bingus'.
	
	authenticator := UserAuthenticatorSimulator with: (Dictionary with: username->'my beloved').
	
	catalog := Dictionary with: 'valid book'->(10*euro).
	
	merchantProcessor := self.
	
	facade := RestInterfaceFacade authenticatingWith: authenticator admitingItemsOn: catalog checkingOutThrough: merchantProcessor.
	
	newCartID := facade createCartForUser: 'bingus' withPassword: 'my beloved'. 
	
	facade addToCart: newCartID copies: 1 ofItem: 'valid book'.
	
	expirationDate := November/07/2022.
	
	creditCardNumber := '5400000000000001'.
	
	self should: [ facade checkOutCart: newCartID withCreditCardNumber: creditCardNumber expiringOn: expirationDate ofUser: username.  ]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [
		:anError |
		self assert: anError messageText equals: facade class invalidCartIDErrorMessage.
	].!

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 11:53:33'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 11:53:33'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 11:53:33'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 11:53:33'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 11:53:33'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase stamp: 'TC&OLT 11/7/2022 11:53:33'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase stamp: 'TC&OLT 11/7/2022 11:53:33'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 11:53:39'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 11:53:39'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 11:53:39'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 11:53:39'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 11:53:39'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase stamp: 'TC&OLT 11/7/2022 11:53:39'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase stamp: 'TC&OLT 11/7/2022 11:53:39'!
ERROR!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 11:56:29' prior: 50561584!
checkOutCart: aCartID withCreditCardNumber: aCreditCardNumber expiringOn: anExpirationDate ofUser: aUsername
	
	| cartToCheckOut |
	
	cartToCheckOut := 		idToCartMappings at: aCartID.! !

Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMappings lastID catalog merchantProcessor userPurchases'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceFacade category: 'TusLibros' stamp: 'TC&OLT 11/7/2022 11:58:02'!
Object subclass: #RestInterfaceFacade
	instanceVariableNames: 'authenticator idToCartMappings lastID catalog merchantProcessor userPurchases'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 11:58:22' prior: 50559869!
initializeAuthenticatingWith: anAuthenticator admitingItemsOn: aCatalog
	
	authenticator := anAuthenticator.
	idToCartMappings := Dictionary new.
	lastID := 0.
	catalog := aCatalog.
	userPurchases := Dictionary new.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 12:00:23' prior: 50560263!
createCartForUser: aUsername withPassword: aPassword
	
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		| newCart newID |
		
		newCart := Cart acceptingItemsOf: catalog.
		newID := self generateNewID.
		idToCartMappings add: (newID->newCart).
		userPurchases add: aUsername->OrderedCollection new.
		^newID.
	].
	
	^self error: self class invalidUserErrorMessage.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 12:01:49' prior: 50561853!
checkOutCart: aCartID withCreditCardNumber: aCreditCardNumber expiringOn: anExpirationDate ofUser: aUsername
	
	| cartToCheckOut cashier |
	
	cartToCheckOut := 		idToCartMappings at: aCartID.
	"cashier := Cashier toCheckout: cart charging: CreditCard new throught: self on: registeringOn: ."! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 12:02:03' prior: 50561906!
checkOutCart: aCartID withCreditCardNumber: aCreditCardNumber expiringOn: anExpirationDate ofUser: aUsername
	
	| cartToCheckOut |
	
	cartToCheckOut := 		idToCartMappings at: aCartID.
	"cashier := Cashier toCheckout: cartToCheckOut charging: CreditCard new throught: self on: registeringOn: ."! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 12:03:38' prior: 50561919!
checkOutCart: aCartID withCreditCardNumber: aCreditCardNumber expiringOn: anExpirationDate ofUser: aUsername
	
	| cartToCheckOut salesBook cashier |
	
	cartToCheckOut := 		idToCartMappings at: aCartID.
	salesBook := userPurchases at: aUsername.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 12:06:57' prior: 50561932!
checkOutCart: aCartID withCreditCardNumber: aCreditCardNumber expiringOn: anExpirationDate ofUser: aUsername
	
	| cartToCheckOut salesBook cashier |
	
	cartToCheckOut := 		idToCartMappings at: aCartID.
	salesBook := userPurchases at: aUsername.
	
	cashier := Cashier toCheckout: cartToCheckOut charging: (CreditCard expiringOn: anExpirationDate) throught: merchantProcessor on: Date today registeringOn: salesBook. ! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 12:07:14' prior: 50561943!
checkOutCart: aCartID withCreditCardNumber: aCreditCardNumber expiringOn: anExpirationDate ofUser: aUsername
	
	| cartToCheckOut salesBook cashier |
	
	cartToCheckOut := 		idToCartMappings at: aCartID.
	salesBook := userPurchases at: aUsername.
	
	cashier := Cashier toCheckout: cartToCheckOut charging: (CreditCard expiringOn: anExpirationDate) throught: merchantProcessor on: Date today registeringOn: salesBook.! !
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 12:07:37' prior: 50561960!
checkOutCart: aCartID withCreditCardNumber: aCreditCardNumber expiringOn: anExpirationDate ofUser: aUsername
	
	| cartToCheckOut salesBook cashier |
	
	cartToCheckOut := 		idToCartMappings at: aCartID.
	salesBook := userPurchases at: aUsername.
	
	cashier := Cashier toCheckout: cartToCheckOut charging: (CreditCard expiringOn: anExpirationDate) throught: merchantProcessor on: Date today registeringOn: salesBook.
	
	cashier checkOut.! !
!RestInterfaceFacade methodsFor: 'as yet unclassified' stamp: 'TC&OLT 11/7/2022 12:10:01'!
listPurchasesforUser: aUsername withPassword: aPassword
	
	! !
!RestInterfaceFacade methodsFor: 'as yet unclassified' stamp: 'TC&OLT 11/7/2022 12:10:44' prior: 50561994!
listPurchasesforUser: aUsername withPassword: aPassword
	
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		^userPurchases at: aUsername.
	].! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 12:10:50'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 12:10:50'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 12:10:50'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 12:10:50'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 12:10:50'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase stamp: 'TC&OLT 11/7/2022 12:10:50'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase stamp: 'TC&OLT 11/7/2022 12:10:50'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase stamp: 'TC&OLT 11/7/2022 12:11:18'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase stamp: 'TC&OLT 11/7/2022 12:11:46'!
ERROR!
!RestInterfaceFacade methodsFor: 'cart operations' stamp: 'TC&OLT 11/7/2022 12:12:05' prior: 50561890!
createCartForUser: aUsername withPassword: aPassword
	
	(authenticator authenticateUsername: aUsername withPassword: aPassword) ifTrue: [
		| newCart newID |
		
		newCart := Cart acceptingItemsOf: catalog.
		newID := self generateNewID.
		idToCartMappings add: (newID->newCart).
		userPurchases add: (aUsername->OrderedCollection new).
		^newID.
	].
	
	^self error: self class invalidUserErrorMessage.! !
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 12:12:19' prior: 50561879!
initializeAuthenticatingWith: anAuthenticator admitingItemsOn: aCatalog
	
	authenticator := anAuthenticator.
	idToCartMappings := Dictionary new.
	lastID := 0.
	catalog := aCatalog.! !
!RestInterfaceFacade methodsFor: 'initialization' stamp: 'TC&OLT 11/7/2022 12:12:21' prior: 50561572!
initializeAuthenticatingWith: anAuthenticator admitingItemsOn: aCatalog checkingOutThrough: aMerchantProcessor
	
	authenticator := anAuthenticator.
	idToCartMappings := Dictionary new.
	lastID := 0.
	catalog := aCatalog.
	merchantProcessor := aMerchantProcessor.
	userPurchases := Dictionary new.! !

!testRun: #RestInterfaceFacadeTest #test01CartCantBeCreatedForAnInvalidUser stamp: 'TC&OLT 11/7/2022 12:12:24'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test02CartIsCreatedForAValidUser stamp: 'TC&OLT 11/7/2022 12:12:24'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test03listingCartForInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 12:12:24'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test04AddingToCartWithValidIDResultsInAddingToCartItems stamp: 'TC&OLT 11/7/2022 12:12:24'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test05AddingToCartWithInvalidIDResultsInError stamp: 'TC&OLT 11/7/2022 12:12:24'!
PASSED!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase stamp: 'TC&OLT 11/7/2022 12:12:24'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase stamp: 'TC&OLT 11/7/2022 12:12:31'!
ERROR!

!testRun: #RestInterfaceFacadeTest #test06CheckoutOfValidCartWithItemsResultsInItemAddedAsPurchase stamp: 'TC&OLT 11/7/2022 12:12:31'!
ERROR!